<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Users extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
        if ($this->session->userdata('role') == TEACHER) {
            redirect('classes');
        }
        if ($this->session->userdata('role') == STUDENT) {
            redirect('post');
        }
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('users/index?');
        $config['total_rows'] = $this->User_model->get_all_users_count();
        $this->pagination->initialize($config);

        $data['users'] = $this->User_model->get_all_users($params);
        
        $data['_view'] = 'user/index';
        $this->load->view('layouts/main',$data);
    }

    function profile()
    {
        $data['_view'] = 'profile';
        $this->load->view('layouts/main',$data);
    }
    /*
     * Adding a new user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('first_name','First Name','required');
		$this->form_validation->set_rules('role','Role','required');
		$this->form_validation->set_rules('email','Email','required');
		$this->form_validation->set_rules('password','Password','required');
        $this->form_validation->set_rules('phone','Phone','required');
        

		if($this->form_validation->run())    
        {
            $exist = $this->User_model->get_user_email($this->input->post('email'));
            if ($exist) {
                $this->session->set_flashdata('info', 'This email is already exist,please used another email.');
                redirect('users/add');
            }else{
                $params = array(
    				'first_name' => $this->input->post('first_name'),
    				'last_name' => $this->input->post('last_name'),
                    'phone' => $this->input->post('phone'),
    				'dob' => $this->input->post('dob'),
    				'email' => $this->input->post('email'),
    				'password' => md5($this->input->post('password')),
    				'gender' => $this->input->post('gender'),
    				'role' => $this->input->post('role'),
    				'status' => $this->input->post('status'),
                );

                $user_id = $this->User_model->add_user($params);
                redirect('users/index'); 
                
            }
        }
        else
        {           

            $data['_view'] = 'user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($u_id)
    {   
        $id = base64_decode(urldecode($u_id));
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($id);
        
        if(isset($data['user']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('first_name','First Name','required');
			$this->form_validation->set_rules('role','Role','required');
			$this->form_validation->set_rules('email','Email','required');
            $this->form_validation->set_rules('phone','Phone','required');
            // if ($this->session->userdata('role') == ADMIN) {
            //     $this->form_validation->set_rules('site_id','Site','required');
            // }

			if($this->form_validation->run())     
            {   
                $exist = $this->User_model->get_user_email($this->input->post('email'));
                // if ($exist) {
                //     $this->session->set_flashdata('info', 'This email is already exist,please used another email.');
                //     redirect('users/edit/'.$u_id);
                // }else{
                    $params = array(
    					'first_name' => $this->input->post('first_name'),
    					'last_name' => $this->input->post('last_name'),
                        'phone' => $this->input->post('phone'),
                        'email' => $this->input->post('email'),
    					'dob' => $this->input->post('dob'),
    					'gender' => $this->input->post('gender'),
    					'status' => $this->input->post('status'),
    					'role' => $this->input->post('role'),
                    );

                    if($this->input->post('password')){
                        $params['password'] = md5($this->input->post('password'));
                    }
                    $config['upload_path'] = 'uploads';
                    $config['allowed_types'] = 'jpg|jpeg|png|gif|pdf';
                    $this->load->library('upload',$config);
                    if(!empty($_FILES['img']['name'])){
                        $this->upload->do_upload('img');
                        $upload_data = $this->upload->data(); //Returns array of containing all of the data related to the file you uploaded.
                        $params['img']= $upload_data['file_name'];
                    }
                    $this->User_model->update_user($id,$params);
                    redirect('users/index'); 
                // }

            }
            else
            {
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($id)
    {
        $user = $this->User_model->get_user($id);

        // check if the user exists before trying to delete it
        if(isset($user['id']))
        {
            $this->User_model->delete_user($id);
            redirect('users/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
}
